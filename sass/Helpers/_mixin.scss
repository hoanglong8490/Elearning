//k co tham so
// @mixin styleText{
//     color: white;
//     font-size: 13px;
// }

//co tham so
@mixin styleText($color, $fs, $fw) {
  color: $color;
  font-size: $fs;
  font-weight: $fw;
}

@mixin styleButton($color, $bgcolor, $border, $fs, $fw, $pd-y, $pd-x) {
  color: $color;
  background-color: $bgcolor;
  border: 1px solid $border;
  font-size: $fs;
  font-weight: $fw;
  padding: $pd-y $pd-x;
  cursor: pointer;
}

@mixin hoverButton($color, $bgcolor, $border) {
  color: $color;
  background-color: $bgcolor;
  border: 1px solid $border;
}
@mixin styleFormSearch($bgcolor, $bgcolor-focus, $border-color,$color) {
  .input-group {
    background-color: $bgcolor;
    .form-control {
      background-color: transparent;
      border-color: transparent;
      box-shadow: none;
      transition: none;
      color: $color;
      box-shadow: none;
      &::placeholder {
        color: $color;
      }
      &:focus {
        background-color: $bgcolor-focus;
        border-top-color: $border-color;
        border-bottom-color: $border-color;
        border-left-color: $border-color;
      }
      &:focus + .input-group-append {
        .input-group-text {
          background-color: $bgcolor;
          border-top-color: $border-color;
          border-bottom-color: $border-color;
          border-right-color: $border-color;
          color: $color-red-0;
          &:hover {
            color: $color_white-0;
            background-color: $color-red-0;
          }
        }
      }
    }
    .input-group-append {
      .input-group-text {
        background-color: transparent;
        border-color: transparent;
        color: $color-red-0;
        &:hover {
          color: $color_white-0;
          background-color: $color-red-0;
        }
      }
    }
  }
}
@mixin reponsive($screen) {
  @if map-has-key($map:$breakpoints, $key:$screen) {
    $value:map-get($map:$breakpoints, $key:$screen);
    @media screen and(max-width:$value) {
      @content;
    }
  }
  @else{
    @warn "'{$screen}' isn't valid";
  }
}
